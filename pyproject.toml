[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "napari_sphinx_theme"
description = "Bootstrap-based Sphinx theme from the napari community"
dynamic = ["version"]
readme = "README.md"
authors = [ {name = "napari team" }]

requires-python = ">=3.13"
dependencies = [
  "pydata-sphinx-theme>=0.16.1",
  "packaging",
  "docutils-stubs==0.0.22",
  "types-docutils==0.21.0.20250728",
]
license = "BSD-3-Clause"
license-files = ["LICENSE"]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Framework :: Sphinx",
  "Framework :: Sphinx :: Theme",
  "Operating System :: OS Independent",
]

[project.optional-dependencies]
doc = [
  "numpydoc",
]

dev = [
  "pyyaml",
  "pre-commit",
  "nox",
  "mypy",
  "types-docutils",
  "napari-sphinx-theme[coverage]",
]

[project.entry-points."sphinx.html_themes"]
napari_sphinx_theme = "napari_sphinx_theme"

[project.urls]
homepage = "https://napari.org/napari-sphinx-theme/"
repository = "https://github.com/napari/napari-sphinx-theme"

[tool.setuptools]
packages = ["napari_sphinx_theme"]
zip-safe = false

[tool.setuptools_scm]
version_file = "napari_sphinx_theme/_version.py"

[tool.setuptools.package-data]
napari_sphinx_theme = [
    "theme.conf",
    "*.html",
    "static/css/*.css",
    "components/*.html",
    "partials/*.html",
    "scripts/*.js",
]

[project.entry-points."pygments.styles"]
napari = "napari_sphinx_theme:NapariCodeTheme"

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "FURB",     # refurb
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "PYI",      # flake8-pyi
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "ARG",      # flake8-unused-arguments
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
]
typing-modules = ["mypackage._compat.typing"]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "sphinx.*"
ignore_missing_imports = true

[tool.codespell]
ignore-words-list = ["napari"]
